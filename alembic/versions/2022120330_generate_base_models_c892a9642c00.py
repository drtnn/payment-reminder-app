"""Generate base models

Revision ID: c892a9642c00
Revises: 
Create Date: 2022-12-03 23:30:30.547745

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = "c892a9642c00"
down_revision = None
branch_labels = None
depends_on = None

RUSSIAN = "ru"
ENGLISH = "en"

LANGUAGE_TYPES = [
    (RUSSIAN, "Russian"),
    (ENGLISH, "English")
]

DAILY = "daily"
WEEKLY = "weekly"
MONTHLY = "monthly"
YEARLY = "yearly"

REPEAT_TYPES = [
    (DAILY, DAILY),
    (WEEKLY, WEEKLY),
    (MONTHLY, MONTHLY),
    (YEARLY, YEARLY)
]


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "payment",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("sum", sa.Float(), nullable=False),
        sa.Column("bank", sa.String(length=32), nullable=False),
        sa.Column(
            "phone_number",
            sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20),
            nullable=True,
        ),
        sa.Column("card_number", sa.String(length=20), nullable=True),
        sa.Column(
            "currency",
            sqlalchemy_utils.types.currency.CurrencyType(length=3),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reminder",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("remind_at", sa.DateTime(), nullable=False),
        sa.Column(
            "repeat", sqlalchemy_utils.types.choice.ChoiceType(REPEAT_TYPES), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("full_name", sa.String(length=255), nullable=False),
        sa.Column(
            "language",
            sqlalchemy_utils.types.choice.ChoiceType(LANGUAGE_TYPES),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=False)
    op.create_table(
        "inter_user_payment",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("from_user_id", sa.Integer(), nullable=True),
        sa.Column("to_user_id", sa.Integer(), nullable=True),
        sa.Column("payment_id", sa.Integer(), nullable=True),
        sa.Column("reminder_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["from_user_id"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["payment_id"], ["payment.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["reminder_id"], ["reminder.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["to_user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_inter_user_payment_title"),
        "inter_user_payment",
        ["title"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_inter_user_payment_title"), table_name="inter_user_payment")
    op.drop_table("inter_user_payment")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_table("user")
    op.drop_table("reminder")
    op.drop_table("payment")
    # ### end Alembic commands ###
